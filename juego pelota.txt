import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Cancha extends JPanel {
	Pelota pelota = new Pelota(this);
	Raqueta raqueta = new Raqueta(this);
	
	public Cancha() {
		// TODO Auto-generated constructor stub
		addKeyListener(new KeyListener() {
			
			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				raqueta.keyReleassed(e);
			}
			
			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				raqueta.keyPressed(e);
			}
		});
		
		setFocusable(true);
	}
	
	@Override
	public void paint(Graphics g) {
		// TODO Auto-generated method stub
		super.paint(g);
		Graphics2D graphics2d = (Graphics2D) g;
		pelota.pintarPelota(graphics2d);
		raqueta.pintarRaqueta(graphics2d);
		
		
	}
	
	public void  mover() {
		pelota.moverPelota();
		raqueta.moverRaqueta();
	}
	
	public void  gameOver() {
		JOptionPane.showMessageDialog(this, "Se termino el juego", "Game Over", JOptionPane.YES_NO_OPTION);
		System.exit(ABORT);
		
	}

}
----------------------------------------------------------------------------
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;

public class Pelota {
	
	int x = 0;
	int y = 0;
	
	int xa = 1;
	int ya = 1;
	
	Cancha cancha;
	public Pelota(Cancha cancha) {
		// TODO Auto-generated constructor stub
		this.cancha = cancha;
	}
	
	public void moverPelota() {
		if (x + xa < 0) {
			xa = 1;
		}
		if (x + xa > cancha.getWidth() - 30) {
			xa = -1;
		}
		if (y + ya <0) {
			ya = 1;
		}
		/*if (y + ya > cancha.getHeight() - 30) {
			ya = -1;
		}*/
		if (colision()) {
			ya = -1;
			
		}
		
		if (y + ya > cancha.getHeight() - 30) {
			cancha.gameOver();
		}
		
		x= x + xa;
		y = y + ya;
	}
	
	public void pintarPelota(Graphics2D graphics2d) {
		// 
		graphics2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		graphics2d.fillOval(x, y, 30, 30);
		

	}
	
	public Rectangle obtenerLimites() {
		return new Rectangle(x, y, 30, 30);
		
	}
	
	public boolean colision() {
		return cancha.raqueta.obtenerLimites().intersects(obtenerLimites());
	}

}
--------------------------------------------------------------------------------------------
import javax.swing.JFrame;

public class Principal {

	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub
		Cancha cancha = new Cancha();
		JFrame miVentana = new JFrame("Juego Tenis");
		miVentana.add(cancha);
		
		miVentana.setSize(300, 300);
		miVentana.setVisible(true);
		miVentana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		while (true) {
			cancha.mover();
			cancha.repaint();
			Thread.sleep(10);
		}

	}

}
---------------------------------------------------------------------------
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class Raqueta {
	
	int x = 0;
	int xa = 0;
	Cancha cancha;
	
	public Raqueta(Cancha cancha) {
		// TODO Auto-generated constructor stub
		this.cancha = cancha;
	}
	
	public void moverRaqueta() {
		if (x + xa > 0 && x + xa < cancha.getWidth() - 60) {
			x = x + xa;
		}
		
	}
	public void pintarRaqueta(Graphics2D graphics2d) {
			graphics2d.fillRect(x, 250, 60, 10);
	}
	
	public void  keyReleassed(KeyEvent e) {
		xa = 0;
	}
	
	public void  keyPressed(KeyEvent e) {
		if (e.getKeyCode() == KeyEvent.VK_LEFT) {
			xa = -1;
		}
		if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
			xa = 1;
		}
		
	}
	
	public Rectangle obtenerLimites() {
		return new Rectangle(x, 250, 60, 10);
	}
}
-------------------------------------